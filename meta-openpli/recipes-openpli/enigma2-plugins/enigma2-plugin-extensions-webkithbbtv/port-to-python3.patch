From 44baac106cddeb940229417431a19217cfea5224 Mon Sep 17 00:00:00 2001
From: kueken <ohnemailadresse@arcor.de>
Date: Wed, 6 Dec 2023 10:02:54 +0100
Subject: [PATCH] 2port-to-python3

---
 webkit-hbbtv-plugin/WebkitHbbTV/aitreader.py | 30 +++++++++++---------
 webkit-hbbtv-plugin/WebkitHbbTV/hbbtv.py     | 12 ++++----
 webkit-hbbtv-plugin/WebkitHbbTV/plugin.py    | 20 +++++++------
 webkit-hbbtv-plugin/WebkitHbbTV/vbcfg.py     |  8 +++---
 webkit-hbbtv-plugin/WebkitHbbTV/vbipc.py     | 10 +++----
 5 files changed, 43 insertions(+), 37 deletions(-)

diff --git a/webkit-hbbtv-plugin/WebkitHbbTV/aitreader.py b/webkit-hbbtv-plugin/WebkitHbbTV/aitreader.py
index dda39dc..a69c653 100644
--- a/webkit-hbbtv-plugin/WebkitHbbTV/aitreader.py
+++ b/webkit-hbbtv-plugin/WebkitHbbTV/aitreader.py
@@ -1,14 +1,15 @@
 import os, xml.dom.minidom, re
 from enigma import iServiceInformation
+from six import unichr, PY3
 
-import vbcfg
+from . import vbcfg
 
 RE_XML_ILLEGAL = u'([\u0000-\u0008\u000b-\u000c\u000e-\u001f\ufffe-\uffff])' + \
 				u'|' + \
 				u'([%s-%s][^%s-%s])|([^%s-%s][%s-%s])|([%s-%s]$)|(^[%s-%s])' % \
-				(unichr(0xd800),unichr(0xdbff),unichr(0xdc00),unichr(0xdfff),
-				unichr(0xd800),unichr(0xdbff),unichr(0xdc00),unichr(0xdfff),
-				unichr(0xd800),unichr(0xdbff),unichr(0xdc00),unichr(0xdfff))
+				(unichr(0xd800), unichr(0xdbff), unichr(0xdc00), unichr(0xdfff),
+				unichr(0xd800), unichr(0xdbff), unichr(0xdc00), unichr(0xdfff),
+				unichr(0xd800), unichr(0xdbff), unichr(0xdc00), unichr(0xdfff))
 
 DUMPBIN = vbcfg.PLUGINROOT + "/dumpait"
 class eAITSectionReader:
@@ -74,31 +75,32 @@ class eAITSectionReader:
 
 		document = ""
 		try:	document = os.popen(self.mCommand).read()
-		except Exception, ErrMsg:
+		except Exception as ErrMsg:
 			vbcfg.ERR(ErrMsg)
 			return False
 		if len(document) == 0:
 			return False
 		document = re.sub(RE_XML_ILLEGAL, "?", document)
 		document = re.sub("&", "+", document)
-		document = document.decode("cp1252").encode("utf-8")
+		if not PY3:
+			document = document.decode("cp1252").encode("utf-8")
 		document = "<URL>" + document + "</URL>"
 		try:
 			self.mDocument = xml.dom.minidom.parseString(document)
-		except Exception, ErrMsg:
+		except Exception as ErrMsg:
 			vbcfg.ERR("XML parse: %s" % ErrMsg)
 			return False
 		return True
 
 	def doDump(self):
 		for x in self.getApplicationList():
-			print "Name  :", x["name"]
-			print "URL   :", x["url"]
-			print "OrgID :", x["orgid"]
-			print "AppID :", x["appid"]
-			print "Control Code :", x["control"]
-			print "Profile Code :", x["profile"]
-			print ""
+			print("Name  :", x["name"])
+			print("URL   :", x["url"])
+			print("OrgID :", x["orgid"])
+			print("AppID :", x["appid"])
+			print("Control Code :", x["control"])
+			print("Profile Code :", x["profile"])
+			print("")
 
 def unit_test(demux, pmtid, sid):
 	reader = eAITSectionReader(demux, pmtid, sid)
diff --git a/webkit-hbbtv-plugin/WebkitHbbTV/hbbtv.py b/webkit-hbbtv-plugin/WebkitHbbTV/hbbtv.py
index 4ec93d0..c96e05f 100644
--- a/webkit-hbbtv-plugin/WebkitHbbTV/hbbtv.py
+++ b/webkit-hbbtv-plugin/WebkitHbbTV/hbbtv.py
@@ -1,11 +1,13 @@
 from Screens.Screen import Screen
+from Screens.ChannelSelection import ChannelSelection
+from Components.ActionMap import ActionMap
+from enigma import eTimer, eServiceReference
 
-from enigma import eTimer
+import os, struct
 
-import os, struct, vbcfg
-
-from __init__ import _
-from vbipc import VBController
+from . import vbcfg
+from .__init__ import _
+from .vbipc import VBController
 
 class HbbTVWindow(Screen):
 	skin = """
diff --git a/webkit-hbbtv-plugin/WebkitHbbTV/plugin.py b/webkit-hbbtv-plugin/WebkitHbbTV/plugin.py
index d7a2ab7..b5dbb70 100644
--- a/webkit-hbbtv-plugin/WebkitHbbTV/plugin.py
+++ b/webkit-hbbtv-plugin/WebkitHbbTV/plugin.py
@@ -13,11 +13,12 @@ from Components.VolumeControl import VolumeControl
 
 from enigma import eTimer, iServiceInformation, iPlayableService
 
-import os, struct, vbcfg, time
+import os, struct, time
 
-from __init__ import _
-from hbbtv import HbbTVWindow
-from vbipc import VBController, VBServerThread, VBHandlers
+from . import vbcfg
+from .__init__ import _
+from .hbbtv import HbbTVWindow
+from .vbipc import VBController, VBServerThread, VBHandlers
 
 strIsEmpty = lambda x: x is None or len(x) == 0
 
@@ -171,7 +172,7 @@ class VBHandler(VBHandlers):
 		if (vbcfg.g_channel_info):
 			try:
 				data = struct.pack('iiiii', int(orgid), vbcfg.g_channel_info[0], vbcfg.g_channel_info[1], vbcfg.g_channel_info[2], len(vbcfg.g_channel_info[3])) + vbcfg.g_channel_info[3]
-			except Exception, err:
+			except Exception as err:
 				vbcfg.ERR(err)
 				return (False, None)
 		else:
@@ -202,7 +203,7 @@ class VBHandler(VBHandlers):
 
 		try:
  			data = struct.pack('i', int(offset))
-		except Exception, err:
+		except Exception as err:
 			vbcfg.ERR(err)
 			return (False, None)
 
@@ -222,7 +223,8 @@ class VBMain(Screen):
 		self._timer_infobar = eTimer()
 		self._timer_infobar.callback.append(self._cb_register_infobar)
 		self._timer_infobar.start(1000)
-
+		
+		self._timer_update_video_size = eTimer()		
 		self._event = ServiceEventTracker(screen=self, eventmap={
 				iPlayableService.evHBBTVInfo: self._cb_ait_detected,
 				iPlayableService.evUpdatedInfo: self._cb_info_updated
@@ -280,7 +282,7 @@ class VBMain(Screen):
 		try:
 			if selected[1] is not None:
 				self._cb_hbbtv_activated(selected[1]["url"], selected[1])
-		except Exception, ErrMsg:
+		except Exception as ErrMsg:
 			vbcfg.ERR(ErrMsg)
 
 	def get_autostart_application(self):
@@ -300,7 +302,7 @@ class VBMain(Screen):
 				demux = demux if demux > '/' else '0'
 				vbcfg.DEBUG("demux = %s, pmtid = 0x%x, sid = 0x%x" % (demux, pmtid, sid))
 
-				from aitreader import eAITSectionReader
+				from .aitreader import eAITSectionReader
 				reader = eAITSectionReader(demux, pmtid, sid)
 				if reader.doOpen(info, self.m_vuplus):
 					reader.doParseApplications()
diff --git a/webkit-hbbtv-plugin/WebkitHbbTV/vbcfg.py b/webkit-hbbtv-plugin/WebkitHbbTV/vbcfg.py
index a6d29c8..0f79c5b 100644
--- a/webkit-hbbtv-plugin/WebkitHbbTV/vbcfg.py
+++ b/webkit-hbbtv-plugin/WebkitHbbTV/vbcfg.py
@@ -40,7 +40,7 @@ def getPosition():
 			file = open("/proc/stb/fb/dst_height", "r")
 			dst_height = int(file.read().strip(), 16)
 			file.close()
-		except Exception, Err:
+		except Exception as Err:
 			ERR(Err)
 			return None
 	return (dst_left, dst_width, dst_top, dst_height)
@@ -64,7 +64,7 @@ def setPosition(params):
 			file = open("/proc/stb/fb/dst_height", "w")
 			file.write('%X' % params[3])
 			file.close()
-		except Exception, Err:
+		except Exception as Err:
 			ERR(Err)
 			return
 
@@ -75,14 +75,14 @@ def osd_lock():
 	if fileExists("/usr/bin/config"):
 		try:
 			os.system('config -c DirectFB -visible on; config -c 1 -visible off')
-		except Exception, Err:
+		except Exception as Err:
 			ERR(Err)
 
 def osd_unlock():
 	if fileExists("/usr/bin/config"):
 		try:
 			os.system('config -c 1 -visible on; config -c DirectFB -visible off')
-		except Exception, Err:
+		except Exception as Err:
 			ERR(Err)
 
 	fbClass.getInstance().unlock()
@@ -98,9 +98,9 @@ g_debug = False
 
 def LogEntry(mode, string):
 	if g_debug:
-		print strftime("%x %X", localtime()), "%5s [%12s]" % (mode, "Plugin"), string
+		print(strftime("%x %X", localtime()), "%5s [%12s]" % (mode, "Plugin"), string)
 	elif mode != "DEBUG":
-		print "[browser]", string
+		print("[browser]", string)
 
 def DEBUG(string):
 	LogEntry("DEBUG", string)
diff --git a/webkit-hbbtv-plugin/WebkitHbbTV/vbipc.py b/webkit-hbbtv-plugin/WebkitHbbTV/vbipc.py
index f616a2d..a174ecf 100644
--- a/webkit-hbbtv-plugin/WebkitHbbTV/vbipc.py
+++ b/webkit-hbbtv-plugin/WebkitHbbTV/vbipc.py
@@ -1,5 +1,5 @@
 import os, threading, time, socket, select, struct
-import vbcfg
+from . import vbcfg
 
 _OPCODE  = {}
 _BUFSIZE = 4096
@@ -43,7 +43,7 @@ class VBController:
 			if cmd_fd is None:
 				raise Exception("fail to open controller file.")
 			os.write(cmd_fd, send_data)
-		except Exception, err:
+		except Exception as err:
 			vbcfg.ERR("VBHController: %s" % err)
 			vbcfg.setPosition(vbcfg.g_position)
 			vbcfg.osd_unlock()
@@ -96,10 +96,10 @@ class VBServerThread(threading.Thread):
 		read_data = conn.recv(_BUFSIZE)
 		request = self.parse(read_data)
 		opcode, result, read_packet = request[0], request[1], request[2]
-		result, send_packet = False,None
+		result, send_packet = False, None
 		try:
 			result, send_packet = GetHandler(opcode)(result, read_packet)
-		except Exception, ErrMsg:
+		except Exception as ErrMsg:
 			vbcfg.ERR(ErrMsg)
 		send_data = self.assamble(opcode, result, send_packet)
 		conn.sendall(send_data)
@@ -118,7 +118,7 @@ class VBServerThread(threading.Thread):
 					try:
 						conn, addr = self.mSock.accept()
 						self.process(conn, addr)
-					except Exception, err:
+					except Exception as err:
 						vbcfg.ERR("VBSServerThread: %s" % err)
 					finally:
 						if conn is not None:
-- 
2.34.1

